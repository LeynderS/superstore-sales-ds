services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:8000"
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=True
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres-db
      - DB_PORT=${DB_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - my_network

  postgres-db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - my_network
    ports:
      - "${FRONTEND_PORT}:5173"
    depends_on:
      - backend

networks:
  my_network:

volumes:
  postgres_data: